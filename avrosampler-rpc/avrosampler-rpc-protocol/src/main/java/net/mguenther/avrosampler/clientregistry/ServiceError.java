/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.mguenther.avrosampler.clientregistry;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ServiceError extends org.apache.avro.specific.SpecificExceptionBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7794213649025062043L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"error\",\"name\":\"ServiceError\",\"namespace\":\"net.mguenther.avrosampler.clientregistry\",\"fields\":[{\"name\":\"code\",\"type\":\"int\",\"doc\":\"Unique code that identifies an error condition.\"},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Provides a detailed description of the error situation.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Unique code that identifies an error condition. */
  @Deprecated public int code;
  /** Provides a detailed description of the error situation. */
  @Deprecated public java.lang.String message$;

  public ServiceError() {
    super();
  }

  public ServiceError(Object value) {
    super(value);
  }

  public ServiceError(Throwable cause) {
    super(cause);
  }

  public ServiceError(Object value, Throwable cause) {
    super(value, cause);
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return message$;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = (java.lang.Integer)value$; break;
    case 1: message$ = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return Unique code that identifies an error condition.
   */
  public java.lang.Integer getCode() {
    return code;
  }

  /**
   * Sets the value of the 'code' field.
   * Unique code that identifies an error condition.
   * @param value the value to set.
   */
  public void setCode(java.lang.Integer value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'message$' field.
   * @return Provides a detailed description of the error situation.
   */
  public java.lang.String getMessage$() {
    return message$;
  }

  /**
   * Sets the value of the 'message$' field.
   * Provides a detailed description of the error situation.
   * @param value the value to set.
   */
  public void setMessage$(java.lang.String value) {
    this.message$ = value;
  }

  /**
   * Creates a new ServiceError RecordBuilder.
   * @return A new ServiceError RecordBuilder
   */
  public static net.mguenther.avrosampler.clientregistry.ServiceError.Builder newBuilder() {
    return new net.mguenther.avrosampler.clientregistry.ServiceError.Builder();
  }

  /**
   * Creates a new ServiceError RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ServiceError RecordBuilder
   */
  public static net.mguenther.avrosampler.clientregistry.ServiceError.Builder newBuilder(net.mguenther.avrosampler.clientregistry.ServiceError.Builder other) {
    return new net.mguenther.avrosampler.clientregistry.ServiceError.Builder(other);
  }

  /**
   * Creates a new ServiceError RecordBuilder by copying an existing ServiceError instance.
   * @param other The existing instance to copy.
   * @return A new ServiceError RecordBuilder
   */
  public static net.mguenther.avrosampler.clientregistry.ServiceError.Builder newBuilder(net.mguenther.avrosampler.clientregistry.ServiceError other) {
    return new net.mguenther.avrosampler.clientregistry.ServiceError.Builder(other);
  }

  /**
   * RecordBuilder for ServiceError instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificErrorBuilderBase<ServiceError>
    implements org.apache.avro.data.ErrorBuilder<ServiceError> {

    /** Unique code that identifies an error condition. */
    private int code;
    /** Provides a detailed description of the error situation. */
    private java.lang.String message$;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.mguenther.avrosampler.clientregistry.ServiceError.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message$)) {
        this.message$ = data().deepCopy(fields()[1].schema(), other.message$);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ServiceError instance
     * @param other The existing instance to copy.
     */
    private Builder(net.mguenther.avrosampler.clientregistry.ServiceError other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message$)) {
        this.message$ = data().deepCopy(fields()[1].schema(), other.message$);
        fieldSetFlags()[1] = true;
      }
    }

    @Override
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder setValue(Object value) {
      super.setValue(value);
      return this;
    }

    @Override
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder clearValue() {
      super.clearValue();
      return this;
    }

    @Override
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder setCause(Throwable cause) {
      super.setCause(cause);
      return this;
    }

    @Override
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder clearCause() {
      super.clearCause();
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * Unique code that identifies an error condition.
      * @return The value.
      */
    public java.lang.Integer getCode() {
      return code;
    }

    /**
      * Sets the value of the 'code' field.
      * Unique code that identifies an error condition.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder setCode(int value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Unique code that identifies an error condition.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * Unique code that identifies an error condition.
      * @return This builder.
      */
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder clearCode() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message$' field.
      * Provides a detailed description of the error situation.
      * @return The value.
      */
    public java.lang.String getMessage$() {
      return message$;
    }

    /**
      * Sets the value of the 'message$' field.
      * Provides a detailed description of the error situation.
      * @param value The value of 'message$'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder setMessage$(java.lang.String value) {
      validate(fields()[1], value);
      this.message$ = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'message$' field has been set.
      * Provides a detailed description of the error situation.
      * @return True if the 'message$' field has been set, false otherwise.
      */
    public boolean hasMessage$() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message$' field.
      * Provides a detailed description of the error situation.
      * @return This builder.
      */
    public net.mguenther.avrosampler.clientregistry.ServiceError.Builder clearMessage$() {
      message$ = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ServiceError build() {
      try {
        ServiceError record = new ServiceError(getValue(), getCause());
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.Integer) defaultValue(fields()[0]);
        record.message$ = fieldSetFlags()[1] ? this.message$ : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
