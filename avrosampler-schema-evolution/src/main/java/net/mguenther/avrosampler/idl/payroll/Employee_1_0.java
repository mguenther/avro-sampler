/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.mguenther.avrosampler.idl.payroll;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Employee_1_0 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6674086753613502286L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Employee_1_0\",\"namespace\":\"net.mguenther.avrosampler.idl.payroll\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"emails\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"boss\",\"type\":[\"null\",\"Employee_1_0\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String name;
  @Deprecated public int age;
  @Deprecated public java.util.List<java.lang.String> emails;
  @Deprecated public net.mguenther.avrosampler.idl.payroll.Employee_1_0 boss;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Employee_1_0() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param age The new value for age
   * @param emails The new value for emails
   * @param boss The new value for boss
   */
  public Employee_1_0(java.lang.String name, java.lang.Integer age, java.util.List<java.lang.String> emails, net.mguenther.avrosampler.idl.payroll.Employee_1_0 boss) {
    this.name = name;
    this.age = age;
    this.emails = emails;
    this.boss = boss;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return age;
    case 2: return emails;
    case 3: return boss;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: emails = (java.util.List<java.lang.String>)value$; break;
    case 3: boss = (net.mguenther.avrosampler.idl.payroll.Employee_1_0)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'emails' field.
   * @return The value of the 'emails' field.
   */
  public java.util.List<java.lang.String> getEmails() {
    return emails;
  }

  /**
   * Sets the value of the 'emails' field.
   * @param value the value to set.
   */
  public void setEmails(java.util.List<java.lang.String> value) {
    this.emails = value;
  }

  /**
   * Gets the value of the 'boss' field.
   * @return The value of the 'boss' field.
   */
  public net.mguenther.avrosampler.idl.payroll.Employee_1_0 getBoss() {
    return boss;
  }

  /**
   * Sets the value of the 'boss' field.
   * @param value the value to set.
   */
  public void setBoss(net.mguenther.avrosampler.idl.payroll.Employee_1_0 value) {
    this.boss = value;
  }

  /**
   * Creates a new Employee_1_0 RecordBuilder.
   * @return A new Employee_1_0 RecordBuilder
   */
  public static net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder newBuilder() {
    return new net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder();
  }

  /**
   * Creates a new Employee_1_0 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Employee_1_0 RecordBuilder
   */
  public static net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder newBuilder(net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder other) {
    return new net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder(other);
  }

  /**
   * Creates a new Employee_1_0 RecordBuilder by copying an existing Employee_1_0 instance.
   * @param other The existing instance to copy.
   * @return A new Employee_1_0 RecordBuilder
   */
  public static net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder newBuilder(net.mguenther.avrosampler.idl.payroll.Employee_1_0 other) {
    return new net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder(other);
  }

  /**
   * RecordBuilder for Employee_1_0 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Employee_1_0>
    implements org.apache.avro.data.RecordBuilder<Employee_1_0> {

    private java.lang.String name;
    private int age;
    private java.util.List<java.lang.String> emails;
    private net.mguenther.avrosampler.idl.payroll.Employee_1_0 boss;
    private net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder bossBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.emails)) {
        this.emails = data().deepCopy(fields()[2].schema(), other.emails);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.boss)) {
        this.boss = data().deepCopy(fields()[3].schema(), other.boss);
        fieldSetFlags()[3] = true;
      }
      if (other.hasBossBuilder()) {
        this.bossBuilder = net.mguenther.avrosampler.idl.payroll.Employee_1_0.newBuilder(other.getBossBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Employee_1_0 instance
     * @param other The existing instance to copy.
     */
    private Builder(net.mguenther.avrosampler.idl.payroll.Employee_1_0 other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.emails)) {
        this.emails = data().deepCopy(fields()[2].schema(), other.emails);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.boss)) {
        this.boss = data().deepCopy(fields()[3].schema(), other.boss);
        fieldSetFlags()[3] = true;
      }
      this.bossBuilder = null;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder setAge(int value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder clearAge() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'emails' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getEmails() {
      return emails;
    }

    /**
      * Sets the value of the 'emails' field.
      * @param value The value of 'emails'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder setEmails(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.emails = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'emails' field has been set.
      * @return True if the 'emails' field has been set, false otherwise.
      */
    public boolean hasEmails() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'emails' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder clearEmails() {
      emails = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'boss' field.
      * @return The value.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0 getBoss() {
      return boss;
    }

    /**
      * Sets the value of the 'boss' field.
      * @param value The value of 'boss'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder setBoss(net.mguenther.avrosampler.idl.payroll.Employee_1_0 value) {
      validate(fields()[3], value);
      this.bossBuilder = null;
      this.boss = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'boss' field has been set.
      * @return True if the 'boss' field has been set, false otherwise.
      */
    public boolean hasBoss() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'boss' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder getBossBuilder() {
      if (bossBuilder == null) {
        if (hasBoss()) {
          setBossBuilder(net.mguenther.avrosampler.idl.payroll.Employee_1_0.newBuilder(boss));
        } else {
          setBossBuilder(net.mguenther.avrosampler.idl.payroll.Employee_1_0.newBuilder());
        }
      }
      return bossBuilder;
    }

    /**
     * Sets the Builder instance for the 'boss' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder setBossBuilder(net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder value) {
      clearBoss();
      bossBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'boss' field has an active Builder instance
     * @return True if the 'boss' field has an active Builder instance
     */
    public boolean hasBossBuilder() {
      return bossBuilder != null;
    }

    /**
      * Clears the value of the 'boss' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.idl.payroll.Employee_1_0.Builder clearBoss() {
      boss = null;
      bossBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Employee_1_0 build() {
      try {
        Employee_1_0 record = new Employee_1_0();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        record.emails = fieldSetFlags()[2] ? this.emails : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        if (bossBuilder != null) {
          record.boss = this.bossBuilder.build();
        } else {
          record.boss = fieldSetFlags()[3] ? this.boss : (net.mguenther.avrosampler.idl.payroll.Employee_1_0) defaultValue(fields()[3]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
