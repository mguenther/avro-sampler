/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.mguenther.avrosampler.log;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** Beschreibt ein Systemereignis. */
@org.apache.avro.specific.AvroGenerated
public class LogEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8811795255051023860L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LogEvent\",\"namespace\":\"net.mguenther.avrosampler.log\",\"doc\":\"Beschreibt ein Systemereignis.\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Eindeutiger Bezeichner für das Systemereignis.\",\"order\":\"ignore\"},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"order\":\"ignore\"},{\"name\":\"timestamp\",\"type\":\"long\",\"order\":\"descending\"},{\"name\":\"severity\",\"type\":{\"type\":\"enum\",\"name\":\"Severity\",\"symbols\":[\"INFO\",\"WARN\",\"ERROR\"]},\"default\":\"INFO\",\"order\":\"ignore\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Eindeutiger Bezeichner für das Systemereignis. */
  @Deprecated public java.lang.String code;
  @Deprecated public java.lang.String description;
  @Deprecated public long timestamp;
  @Deprecated public net.mguenther.avrosampler.log.Severity severity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LogEvent() {}

  /**
   * All-args constructor.
   * @param code Eindeutiger Bezeichner für das Systemereignis.
   * @param description The new value for description
   * @param timestamp The new value for timestamp
   * @param severity The new value for severity
   */
  public LogEvent(java.lang.String code, java.lang.String description, java.lang.Long timestamp, net.mguenther.avrosampler.log.Severity severity) {
    this.code = code;
    this.description = description;
    this.timestamp = timestamp;
    this.severity = severity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return description;
    case 2: return timestamp;
    case 3: return severity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = (java.lang.String)value$; break;
    case 1: description = (java.lang.String)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: severity = (net.mguenther.avrosampler.log.Severity)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return Eindeutiger Bezeichner für das Systemereignis.
   */
  public java.lang.String getCode() {
    return code;
  }

  /**
   * Sets the value of the 'code' field.
   * Eindeutiger Bezeichner für das Systemereignis.
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'severity' field.
   * @return The value of the 'severity' field.
   */
  public net.mguenther.avrosampler.log.Severity getSeverity() {
    return severity;
  }

  /**
   * Sets the value of the 'severity' field.
   * @param value the value to set.
   */
  public void setSeverity(net.mguenther.avrosampler.log.Severity value) {
    this.severity = value;
  }

  /**
   * Creates a new LogEvent RecordBuilder.
   * @return A new LogEvent RecordBuilder
   */
  public static net.mguenther.avrosampler.log.LogEvent.Builder newBuilder() {
    return new net.mguenther.avrosampler.log.LogEvent.Builder();
  }

  /**
   * Creates a new LogEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LogEvent RecordBuilder
   */
  public static net.mguenther.avrosampler.log.LogEvent.Builder newBuilder(net.mguenther.avrosampler.log.LogEvent.Builder other) {
    return new net.mguenther.avrosampler.log.LogEvent.Builder(other);
  }

  /**
   * Creates a new LogEvent RecordBuilder by copying an existing LogEvent instance.
   * @param other The existing instance to copy.
   * @return A new LogEvent RecordBuilder
   */
  public static net.mguenther.avrosampler.log.LogEvent.Builder newBuilder(net.mguenther.avrosampler.log.LogEvent other) {
    return new net.mguenther.avrosampler.log.LogEvent.Builder(other);
  }

  /**
   * RecordBuilder for LogEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LogEvent>
    implements org.apache.avro.data.RecordBuilder<LogEvent> {

    /** Eindeutiger Bezeichner für das Systemereignis. */
    private java.lang.String code;
    private java.lang.String description;
    private long timestamp;
    private net.mguenther.avrosampler.log.Severity severity;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.mguenther.avrosampler.log.LogEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.severity)) {
        this.severity = data().deepCopy(fields()[3].schema(), other.severity);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LogEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(net.mguenther.avrosampler.log.LogEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.severity)) {
        this.severity = data().deepCopy(fields()[3].schema(), other.severity);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'code' field.
      * Eindeutiger Bezeichner für das Systemereignis.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }

    /**
      * Sets the value of the 'code' field.
      * Eindeutiger Bezeichner für das Systemereignis.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder setCode(java.lang.String value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Eindeutiger Bezeichner für das Systemereignis.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * Eindeutiger Bezeichner für das Systemereignis.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder clearCode() {
      code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'severity' field.
      * @return The value.
      */
    public net.mguenther.avrosampler.log.Severity getSeverity() {
      return severity;
    }

    /**
      * Sets the value of the 'severity' field.
      * @param value The value of 'severity'.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder setSeverity(net.mguenther.avrosampler.log.Severity value) {
      validate(fields()[3], value);
      this.severity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'severity' field has been set.
      * @return True if the 'severity' field has been set, false otherwise.
      */
    public boolean hasSeverity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'severity' field.
      * @return This builder.
      */
    public net.mguenther.avrosampler.log.LogEvent.Builder clearSeverity() {
      severity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public LogEvent build() {
      try {
        LogEvent record = new LogEvent();
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.severity = fieldSetFlags()[3] ? this.severity : (net.mguenther.avrosampler.log.Severity) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
